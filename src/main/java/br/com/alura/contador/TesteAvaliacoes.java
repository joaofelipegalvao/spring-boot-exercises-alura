package br.com.alura.contador;

import java.util.ArrayList;
import java.util.List;

public class TesteAvaliacoes {

  public static void executarTestes() {
    System.out.println("=== TESTE DE AVALIA√á√ïES GEN√âRICAS ===\n");

    // Teste com Produtos
    testarAvaliacoesProdutos();

    // Teste com Servi√ßos
    testarAvaliacoesServicos();

    // Teste com Assinaturas
    testarAvaliacoesAssinaturas();
  }

  private static void testarAvaliacoesProdutos() {
    System.out.println("üì¶ AVALIA√á√ïES DE PRODUTOS:");

    // Criar produtos
    Produto notebook = new Produto("Notebook Dell", 2500.00, "Eletr√¥nicos");
    Produto mouse = new Produto("Mouse Logitech", 150.00, "Perif√©ricos");

    // Criar avalia√ß√µes de produtos
    List<Avaliacao<Produto>> avaliacoesProdutos = new ArrayList<>();
    avaliacoesProdutos.add(new Avaliacao<>(notebook, 4.5, "Excelente qualidade, muito r√°pido!"));
    avaliacoesProdutos.add(new Avaliacao<>(notebook, 4.0, "Bom custo-benef√≠cio"));
    avaliacoesProdutos.add(new Avaliacao<>(mouse, 5.0, "Perfeito para gaming"));
    avaliacoesProdutos.add(new Avaliacao<>(mouse, 3.5, "Bom, mas poderia ser mais barato"));

    // Exibir avalia√ß√µes
    for (Avaliacao<Produto> avaliacao : avaliacoesProdutos) {
      System.out.println(avaliacao);
    }

    // Calcular m√©dia
    double media = Avaliacao.calcularMediaNotas(avaliacoesProdutos);
    System.out.println("M√©dia das avalia√ß√µes de produtos: " + String.format("%.2f", media));
    System.out.println(Avaliacao.obterEstatisticas(avaliacoesProdutos));
    System.out.println();
  }

  private static void testarAvaliacoesServicos() {
    System.out.println("üîß AVALIA√á√ïES DE SERVI√áOS:");

    // Criar servi√ßos
    Servico instalacao = new Servico("Instala√ß√£o de Ar Condicionado", 80.00, "Instala√ß√£o completa");
    Servico manutencao = new Servico("Manuten√ß√£o de PC", 60.00, "Limpeza e verifica√ß√£o");

    // Criar avalia√ß√µes de servi√ßos
    List<Avaliacao<Servico>> avaliacoesServicos = new ArrayList<>();
    avaliacoesServicos.add(new Avaliacao<>(instalacao, 4.8, "T√©cnico muito competente"));
    avaliacoesServicos.add(new Avaliacao<>(instalacao, 4.2, "Servi√ßo r√°pido e eficiente"));
    avaliacoesServicos.add(new Avaliacao<>(manutencao, 3.8, "Fez o b√°sico, mas esperava mais"));

    // Exibir avalia√ß√µes
    for (Avaliacao<Servico> avaliacao : avaliacoesServicos) {
      System.out.println(avaliacao);
    }

    // Calcular m√©dia
    double media = Avaliacao.calcularMediaNotas(avaliacoesServicos);
    System.out.println("M√©dia das avalia√ß√µes de servi√ßos: " + String.format("%.2f", media));
    System.out.println(Avaliacao.obterEstatisticas(avaliacoesServicos));
    System.out.println();
  }

  private static void testarAvaliacoesAssinaturas() {
    System.out.println("üì± AVALIA√á√ïES DE ASSINATURAS:");

    // Criar assinaturas
    Assinatura netflix = new Assinatura("Netflix Premium", 45.90, "4K, 4 telas simult√¢neas");
    Assinatura spotify = new Assinatura("Spotify Premium", 21.90, "M√∫sica sem an√∫ncios");

    // Criar avalia√ß√µes de assinaturas
    List<Avaliacao<Assinatura>> avaliacoesAssinaturas = new ArrayList<>();
    avaliacoesAssinaturas.add(new Avaliacao<>(netflix, 4.7, "√ìtimo cat√°logo de filmes"));
    avaliacoesAssinaturas.add(new Avaliacao<>(netflix, 4.3, "Vale a pena, mas est√° caro"));
    avaliacoesAssinaturas.add(new Avaliacao<>(spotify, 4.9, "Melhor app de m√∫sica!"));
    avaliacoesAssinaturas.add(new Avaliacao<>(spotify, 4.1, "Bom, mas √†s vezes trava"));

    // Exibir avalia√ß√µes
    for (Avaliacao<Assinatura> avaliacao : avaliacoesAssinaturas) {
      System.out.println(avaliacao);
    }

    // Calcular m√©dia
    double media = Avaliacao.calcularMediaNotas(avaliacoesAssinaturas);
    System.out.println("M√©dia das avalia√ß√µes de assinaturas: " + String.format("%.2f", media));
    System.out.println(Avaliacao.obterEstatisticas(avaliacoesAssinaturas));
    System.out.println();
  }
}
